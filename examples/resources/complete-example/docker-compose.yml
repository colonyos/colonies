version: '3.8'

services:
  # TimescaleDB for ColonyOS
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: colonies-timescaledb
    environment:
      POSTGRES_DB: colonies
      POSTGRES_USER: colonies
      POSTGRES_PASSWORD: colonies
    ports:
      - "5432:5432"
    volumes:
      - timescale-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U colonies"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ColonyOS Server
  colonies-server:
    image: colonyos/colonies:latest
    container_name: colonies-server
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      COLONIES_DB_HOST: timescaledb
      COLONIES_DB_PORT: 5432
      COLONIES_DB_USER: colonies
      COLONIES_DB_PASSWORD: colonies
      COLONIES_DB_NAME: colonies
      COLONIES_SERVER_PORT: 50080
      COLONIES_SERVER_HOST: 0.0.0.0
      COLONIES_TLS: "false"
      COLONIES_VERBOSE: "true"
    ports:
      - "50080:50080"
    command: server start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50080/api/v1/info"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Executor Deployment Controller
  executor-controller:
    build:
      context: .
      dockerfile: Dockerfile.controller
    container_name: executor-deployment-controller
    depends_on:
      colonies-server:
        condition: service_healthy
    environment:
      COLONIES_SERVER_HOST: colonies-server
      COLONIES_SERVER_PORT: 50080
      COLONIES_INSECURE: "true"
      COLONIES_COLONY_NAME: dev
      COLONIES_EXECUTOR_NAME: executor-deployment-controller
      DOCKER_HOST: unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -mode controller

volumes:
  timescale-data:
