services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      POSTGRES_USER: ${COLONIES_DB_USER}
      POSTGRES_PASSWORD: ${COLONIES_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      TZ: ${TZ}
      TS_TUNE_MAX_CONNS: "1000"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - minio_data:/var/lib/minio/data
    command: minio server /var/lib/minio/data --console-address :9001
    ports:
      - "9000:9000"
      - "9001:9001"

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    environment:
      AWS_S3_ENDPOINT: minio:9000
      AWS_S3_ACCESSKEY: RrXN2vcLeHjBptG8a3Ay
      AWS_S3_SECRETKEY: ivwLB0Luqomq65nNVmoo8fTBgxXgNvqYGC50VQN6
      AWS_S3_REGION_KEY: ""
      AWS_S3_BUCKET: colonies-prod
      AWS_S3_TLS: "false"
      AWS_S3_SKIPVERIFY: "false"
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
    entrypoint: >
      /bin/sh -c "
      echo 'Executing: /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD}';
      until (/usr/bin/mc alias set myminio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD}); do echo 'Waiting for MinIO...'; sleep 3; done;
      echo 'MinIO is ready. Setting up...';
      echo 'Executing: /usr/bin/mc admin user add myminio ${AWS_S3_ACCESSKEY} ${AWS_S3_SECRETKEY}';
      /usr/bin/mc admin user add myminio ${AWS_S3_ACCESSKEY} ${AWS_S3_SECRETKEY};
      echo 'Executing: /usr/bin/mc admin policy attach myminio readwrite --user=${AWS_S3_ACCESSKEY}';
      /usr/bin/mc admin policy attach myminio readwrite --user=${AWS_S3_ACCESSKEY};
      echo 'Executing: /usr/bin/mc mb myminio/${AWS_S3_BUCKET}';
      /usr/bin/mc mb myminio/${AWS_S3_BUCKET};
      echo 'MinIO setup completed.';
      "

volumes:
  timescaledb_data:
  minio_data:
